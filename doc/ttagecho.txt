*ttagecho.txt*      Show current tag information (echo area or balloon)
                    Author: Tom Link, micathom at gmail com

This plugin is similar to echofunc (vimscript #1735) to which it owes 
much inspiration and two lines of code. It displays some information 
about the tag under the cursor or mouse pointer either in the echo area 
or as balloon help (see |g:ttagecho_balloon_patterns|). If there are 
more than one tags that match, you can loop through the tags by invoking 
the respective commands repeatedly.

If hookcursormoved (vimscript #2037, version >= 0.4) is installed, for 
certain filetypes (see |g:ttagecho_parentheses_patterns|) it will 
display the information in the echo area also if the cursor moves over a 
round parenthesis.

If you don't like the default format for the tags, you can define the 
function TTagechoFormat_{&filetype}(a:tag) that should return some nicely 
formatted information.


-----------------------------------------------------------------------
Install~

Edit the vba file and type: >

    :so %

See :help vimball for details. If you have difficulties or use vim 7.0, 
please make sure, you have the current version of vimball (vimscript 
#1502) installed.

Suggested maps (to be set in ~/.vimrc): >
    noremap <Leader>g+ :TTagechoWord<cr>
    noremap <Leader>g* :TTagechoWord!<cr>
    noremap <Leader>g? :TTagechoWords!<cr>


========================================================================
Contents~

        g:ttagecho_parentheses_patterns ... |g:ttagecho_parentheses_patterns|
        g:ttagecho_balloon_patterns ....... |g:ttagecho_balloon_patterns|
        g:ttagecho_restore_showmode ....... |g:ttagecho_restore_showmode|
        :TTagecho ......................... |:TTagecho|
        :TTagechoAll ...................... |:TTagechoAll|
        :TTagechoWord ..................... |:TTagechoWord|
        :TTagechoWords .................... |:TTagechoWords|
        g:ttagecho_char_rx ................ |g:ttagecho_char_rx|
        g:ttagecho_balloon_limit .......... |g:ttagecho_balloon_limit|
        g:ttagecho_tagwidth ............... |g:ttagecho_tagwidth|
        g:ttagecho_matchbeginning ......... |g:ttagecho_matchbeginning|
        ttagecho#Expr ..................... |ttagecho#Expr()|
        ttagecho#Echo ..................... |ttagecho#Echo()|
        ttagecho#EchoWord ................. |ttagecho#EchoWord()|
        ttagecho#EchoWords ................ |ttagecho#EchoWords()|
        ttagecho#OverParanthesis .......... |ttagecho#OverParanthesis()|
        ttagecho#Balloon .................. |ttagecho#Balloon()|


========================================================================
plugin/ttagecho.vim~

                                                    *g:ttagecho_parentheses_patterns*
g:ttagecho_parentheses_patterns (default: [])
    If hookcursormoved (vimscript #) is installed, display tag 
    information when moving over parantheses for these filetypes.

                                                    *g:ttagecho_balloon_patterns*
g:ttagecho_balloon_patterns    (default: g:ttagecho_parentheses_patterns)
    Set 'balloonexpr' for buffers that match these patterns.

                                                    *g:ttagecho_restore_showmode*
g:ttagecho_restore_showmode    (default: 0)
    If 'showmode' is set, |ttagecho#OverParanthesis()| will 
    temporarily unset the option when triggered in insert mode. The 
    original value will be restored on the next CursorHold(I) events.
    Set this variable to -1, if you don't want this to happen. In this 
    case you might need to set 'cmdheight' to something greater than 
    1.

                                                    *:TTagecho*
TTagecho[!] [TAGS_RX]
    Show the tag in the echo area. If invoked repeatedly, this command 
    will loop through matching tags.

                                                    *:TTagechoAll*
TTagechoAll[!] [TAGS_RX]
    Show all matches.

                                                    *:TTagechoWord*
TTagechoWord[!]
    Show information for the word under cursor.

                                                    *:TTagechoWords*
TTagechoWords[!]
    Show all matches for the word under cursor.


========================================================================
autoload/ttagecho.vim~

                                                    *g:ttagecho_char_rx*
g:ttagecho_char_rx             (default: {})
    Regexps to match keyword characters (in case you don't want to 
    change iskeyword.

                                                    *g:ttagecho_balloon_limit*
g:ttagecho_balloon_limit       (default: '&lines * 2 / 3')
    The number of items to be displayed in the balloon popup. It will be 
    evaluated with |eval()|, which is why it can also be a vim expression.

                                                    *g:ttagecho_tagwidth*
g:ttagecho_tagwidth            (default: '&co / 3')
    The width of the tag "column". It will be evaluated with |eval()|, which 
    is why it can also be a vim expression.

                                                    *g:ttagecho_matchbeginning*
g:ttagecho_matchbeginning      (default: 0)
    If true, match only the beginning of a tag (i.e. don't add '$' to 
    the regexp).

                                                    *ttagecho#Expr()*
ttagecho#Expr(rx, ?many_lines=0, ?bang=0, ?compact=0)
    Return a string representing the tags matching rx.

                                                    *ttagecho#Echo()*
ttagecho#Echo(rx, many_lines, bang)
    Echo the tag(s) matching rx.

                                                    *ttagecho#EchoWord()*
ttagecho#EchoWord(bang)
    Echo one match for the tag under cursor.

                                                    *ttagecho#EchoWords()*
ttagecho#EchoWords(bang)
    Echo all matches for the tag under cursor.

                                                    *ttagecho#OverParanthesis()*
ttagecho#OverParanthesis(mode)
    Echo the tag in front of an opening round parenthesis.

                                                    *ttagecho#Balloon()*
ttagecho#Balloon()
    Return tag information for the tag under the mouse pointer (see 'balloonexpr')



vim:tw=78:fo=tcq2:isk=!-~,^*,^|,^":ts=8:ft=help:norl:
